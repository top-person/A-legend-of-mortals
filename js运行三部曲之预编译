js运行三部曲
-----> 语法分析
-----> 预编译 //预编译发生在函数执行前一刻，解决变量名、函数名、形参相同时的执行顺序问题
-----> 解释执行
1、imply global暗示全局变量：即任何变量，如果变量未经声明就赋值，此变量就为全局对象所有。 a = 10;即：window.a = 10;
----------------------
function test ( ) {    
var a = b =123;  //首先将123赋值给b再将b的值赋值给a 。但b并未声明，这个b归window所有，即b是全局变量，a是局部变量
}
console.log(a); //undefined
console.log(b); //123
----------------------
2、一切声明的全局变量，全是window的属性
eg：var a = 123; ===> window.a = 123

全局预编译1、生成了一个GO对象 ( Global Object )
2、将变量声明提升，顺序执行全局内代码

预编译（函数）
1、创建AO对象 （Activation Object ----执行期上下文）
2、找形参和变量声明，将变量和形参名作为AO属性名，值为undefined
3、将实参值和形参统一
4、在函数体里面找函数声明，值赋予函数体(注意：var a = function () {}是函数表达式，不是函数声明，此时a只是变量，算作第2步)

 ----------------------预编译-简易版-总结--（不能解决所有问题）
1、函数声明整体提升
2、变量   声明提升（只是变量的声明提升， eg：var a ）
--------------------------------------------------
